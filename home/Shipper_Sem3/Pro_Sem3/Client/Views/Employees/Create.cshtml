@model Client.Models.Employee

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_LayoutPage1.cshtml";
}

<h2>Create</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Employee</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <div class="col-md-2">
                @Html.LabelFor(model => model.username, htmlAttributes: new { @class = "control-label" })
            </div>
           
            <div class="col-md-10">
                @Html.EditorFor(model => model.username, new { htmlAttributes = new { @class = "form-control",@required=true } })
                @Html.ValidationMessageFor(model => model.username, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2">
                @Html.LabelFor(model => model.fullname, htmlAttributes: new { @class = "control-label" })
            </div>
            
            <div class="col-md-10">
                @Html.EditorFor(model => model.fullname, new { htmlAttributes = new { @class = "form-control", @required = true } })
                @Html.ValidationMessageFor(model => model.fullname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2">
                @Html.LabelFor(model => model.password, htmlAttributes: new { @class = "control-label" })

            </div>
            
            <div class="col-md-10">
                @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control", @required = true } })
                @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2">
                @Html.LabelFor(model => model.phone, htmlAttributes: new { @class = "control-label" })
            </div>
           
            <div class="col-md-10">
                @Html.EditorFor(model => model.phone, new { htmlAttributes = new { @class = "form-control", @required = true } })
                @Html.ValidationMessageFor(model => model.phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2">
                @Html.LabelFor(model => model.address, htmlAttributes: new { @class = "control-label" })
            </div>
           
            <div class="col-md-10">
                @Html.EditorFor(model => model.address, new { htmlAttributes = new { @class = "form-control", @required = true } })
                @Html.ValidationMessageFor(model => model.address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2">
                @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label" })
            </div>
           
            <div class="col-md-10">
                @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control", @required = true } })
                @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class=" col-md-2">
                @Html.LabelFor(model => model.PositionID, "PositionID", htmlAttributes: new { @class = "control-label" })
            </div>
            
            <div class="col-md-10">
                @Html.DropDownList("PositionID", null, htmlAttributes: new { @class = "form-control", @required = true })
                @Html.ValidationMessageFor(model => model.PositionID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-success" />
            </div>
        </div>
    </div>
}

